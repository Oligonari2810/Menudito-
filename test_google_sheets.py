#!/usr/bin/env python3
"""
üîç Test de Google Sheets
Verifica si Google Sheets est√° funcionando correctamente
"""

import os
import sys
from datetime import datetime

def test_google_sheets():
    """Probar Google Sheets"""
    
    print("üîç TEST DE GOOGLE SHEETS")
    print("=" * 40)
    
    # 1. Verificar credentials.json
    print("1Ô∏è‚É£ Verificando credentials.json...")
    if os.path.exists('credentials.json'):
        print("‚úÖ credentials.json encontrado")
        print(f"   Tama√±o: {os.path.getsize('credentials.json')} bytes")
    else:
        print("‚ùå credentials.json NO encontrado")
        return False
    
    # 2. Verificar dependencias
    print("\n2Ô∏è‚É£ Verificando dependencias...")
    try:
        import gspread
        print("‚úÖ gspread instalado")
    except ImportError:
        print("‚ùå gspread NO instalado")
        return False
    
    try:
        from google.oauth2.service_account import Credentials
        print("‚úÖ google-auth instalado")
    except ImportError:
        print("‚ùå google-auth NO instalado")
        return False
    
    # 3. Probar conexi√≥n
    print("\n3Ô∏è‚É£ Probando conexi√≥n...")
    try:
        import gspread
        from google.oauth2.service_account import Credentials
        
        scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
        creds = Credentials.from_service_account_file('credentials.json', scopes=scope)
        client = gspread.authorize(creds)
        print("‚úÖ Conexi√≥n exitosa")
        
        # 4. Probar acceso a spreadsheet
        print("\n4Ô∏è‚É£ Probando acceso a spreadsheet...")
        try:
            spreadsheet = client.open("Trading Bot Log")
            print("‚úÖ Spreadsheet 'Trading Bot Log' encontrado")
            
            try:
                worksheet = spreadsheet.worksheet("Trading Log")
                print("‚úÖ Worksheet 'Trading Log' encontrado")
                
                # 5. Probar escritura
                print("\n5Ô∏è‚É£ Probando escritura...")
                test_data = [
                    datetime.now().strftime("%Y-%m-%d\t%H:%M:%S"),
                    "TEST",
                    "BUY",
                    "$100,000.00",
                    "10",
                    "test",
                    "100%",
                    "TEST - Verificaci√≥n de conexi√≥n",
                    "TEST",
                    "$0.00",
                    "100.00"
                ]
                
                worksheet.append_row(test_data)
                print("‚úÖ Escritura exitosa")
                
                # Limpiar fila de test
                worksheet.delete_rows(len(worksheet.get_all_values()))
                print("‚úÖ Limpieza completada")
                
                return True
                
            except gspread.WorksheetNotFound:
                print("‚ùå Worksheet 'Trading Log' NO encontrado")
                return False
                
        except gspread.SpreadsheetNotFound:
            print("‚ùå Spreadsheet 'Trading Bot Log' NO encontrado")
            return False
            
    except Exception as e:
        print(f"‚ùå Error de conexi√≥n: {e}")
        return False

def main():
    """Funci√≥n principal"""
    success = test_google_sheets()
    
    print("\n" + "=" * 40)
    if success:
        print("üéâ GOOGLE SHEETS FUNCIONANDO CORRECTAMENTE")
        print("‚úÖ El bot deber√≠a poder registrar operaciones")
    else:
        print("‚ùå GOOGLE SHEETS NO FUNCIONA")
        print("üîß Revisar configuraci√≥n")

if __name__ == "__main__":
    main()
